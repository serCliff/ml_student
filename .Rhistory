knitr::opts_chunk$set(echo = TRUE)
library(readtext)
library(gplots)
dput(names(STUDENTS))
knitr::opts_chunk$set(echo = TRUE)
library(readtext)
library(gplots)
knitr::opts_chunk$set(echo = TRUE)
library(readtext)
library(gplots)
``` {r}
students.csv <- file.path(getwd(), 'student-por.csv')
STUDENTS <- read.csv2(file = students.csv, header = TRUE, sep = ';')
students.csv <- file.path(getwd(), 'student-por.csv')
STUDENTS <- read.csv2(file = students.csv, header = TRUE, sep = ';')
#### a) Se deben realizar pruebas suficientes para obtener una buena selecci칩n de variables, obteniendo uno o varios conjuntos de variables tentativos
``` {r}
dput(names(STUDENTS))
sapply(STUDENTS, class)
sapply(STUDENTS, class)
class(sapply(STUDENTS, class) )
class(sapply(STUDENTS, class))
typeof(sapply(STUDENTS, class))
sapply(STUDENTS, class)
sapply(STUDENTS, typeof)
names(sapply(STUDENTS, class))
values(sapply(STUDENTS, class))
sapply(STUDENTS, class)
apply(STUDENTS, class) %>% filter()
apply(STUDENTS, class)
sapply(STUDENTS, class)
is.integer(STUDENTS)
sapply(STUDENTS, is.integer)
as.matrix(sapply(STUDENTS, is.integer))
as.matrix(sapply(STUDENTS, class))
as.matrix(sapply(STUDENTS, class))[,1]
data.classes <- as.matrix(sapply(STUDENTS, class))
data.classes[, data.classes[,1] == "integer"]
data.classes[data.classes[,1] == "integer"]
data.classes[data.classes == "integer"]
data.classes
which(data.classes == "integer")
which(data.classes == "integer", arr.ind, = TRUE)
which(data.classes == "integer", arr.ind = TRUE)
which(data.classes == "integer")
DPUT(which(data.classes == "integer"))
dput(which(data.classes == "integer"))
subset(data.classes, data.classes == 'integer')
dput(subset(data.classes, data.classes == 'integer'))
subset(data.classes, data.classes == 'integer')
subset(data.classes, data.classes == 'integer').names
rownames(subset(data.classes, data.classes == 'integer'))
dput(rownames(subset(data.classes, data.classes == 'integer')))
categoricas
data.classes <- as.matrix(sapply(STUDENTS, class))
continuas <- dput(rownames(subset(data.classes, data.classes == 'integer')))
categoricas <- dput(rownames(subset(data.classes, data.classes != 'integer')))
continuas
categoricas
print(continuas, categoricas)
data.classes <- as.matrix(sapply(STUDENTS, class))
continuas <- dput(rownames(subset(data.classes, data.classes == 'integer')))
categoricas <- dput(rownames(subset(data.classes, data.classes != 'integer')))
print(continuas, categoricas)
cat(continuas, categoricas)
cat("Variables continuas: "+continuas, "\nVariables categoricas: ", categoricas)
cat("Variables continuas: ",continuas, "\nVariables categoricas: ", categoricas)
STUDENTS2<-na.omit(STUDENTS,(!is.na(STUDENTS)))
STUDENTS<-na.omit(STUDENTS,(!is.na(STUDENTS)))
STUDENTS2<- dummy.data.frame(STUDENTS, categoricas, sep = ".")
library(dummies)
STUDENTS2<- dummy.data.frame(STUDENTS, categoricas, sep = ".")
View(STUDENTS2)
cat("Variables continuas: ",continuas, "\nVariables categoricas: ",categoricas,"\nNuestra variable objetivo ser치: ",vardep)
vardep <- "higher"
cat("Variables continuas: ",continuas, "\nVariables categoricas: ",categoricas,"\nNuestra variable objetivo ser치: ",vardep)
data.classes <- as.matrix(sapply(subset(STUDENTS[-c(vardep)]), class))
subset(STUDENTS[-c(vardep)])
subset(STUDENTS[-c("higher")])
subset(STUDENTS, STUDENTS[-c("higher")])
variable.names <- STUDENTS[-c("higher")]
variable.names <- STUDENTS[,-c("higher")]
variable.names <- STUDENTS[,-("higher")]
variable.names <- STUDENTS[,-"higher"]
variable.names <- STUDENTS[,-21]
View(variable.names)
variable.names <- STUDENTS[,-21]
data.classes <- as.matrix(sapply(subset(variable.names[-c(vardep)]), class))
continuas <- dput(rownames(subset(data.classes, data.classes == 'integer')))
variable.names <- STUDENTS[,-21]
vardep <- "higher"
data.classes <- as.matrix(sapply(subset(variable.names[-c(vardep)]), class))
data.classes <- as.matrix(sapply(STUDENTS[,-21], class))
data.classes <- as.matrix(sapply(STUDENTS[,-21], class))
data.classes <- as.matrix(sapply(STUDENTS[,-21], class))
continuas <- dput(rownames(subset(data.classes, data.classes == 'integer')))
categoricas <- dput(rownames(subset(data.classes, data.classes != 'integer')))
vardep <- "higher"
cat("Variables continuas: ",continuas, "\nVariables categoricas: ",categoricas,"\nNuestra variable objetivo ser치: ",vardep)
